package main

import (
	"context"
	"daft-stats/models"
	"fmt"
	"strings"

	"github.com/gocolly/colly"
	"go.mongodb.org/mongo-driver/mongo"
	"go.mongodb.org/mongo-driver/mongo/options"
)

// Connection URI
const uri = "mongodb://localhost:27017"

func main() {
	property := models.Property{Price: 1200, Location: "Dublin", URL: "https://bullshit.com/adfsjkl/12345", ID: 1234567}
	// Create a new client and connect to the server
	credential := options.Credential{
		Username: "root",
		Password: "example",
	}
	clientOpts := options.Client().ApplyURI(uri).SetAuth(credential)
	client, err := mongo.Connect(context.TODO(), clientOpts)
	if err != nil {
		panic(err)
	}
	fmt.Println("Successfully connected and pinged.")
	coll := client.Database("daft-stats").Collection("properties")
	_, err = coll.InsertOne(context.TODO(), property)

	scrape_properties()
}

func scrape_properties() {
	c := colly.NewCollector()
	// On every a element which has href attribute call callback
	c.OnHTML("li a[href]", func(e *colly.HTMLElement) {
		link := e.Attr("href")

		if strings.Contains(link, "/for-rent/") {
			fmt.Printf("Link found: %q -> %s\n", e.Text, link)
			return link
		}
		return
	})

	// Before making a request print "Visiting ..."
	c.OnRequest(func(r *colly.Request) {
		fmt.Println("Visiting", r.URL.String())
	})

	// Start scraping on https://hackerspaces.org
	c.Visit("https://www.daft.ie/property-for-rent/ireland?pageSize=20&from=40")
}
